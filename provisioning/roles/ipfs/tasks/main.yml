---
- name: download go-ipfs binary
  get_url: url={{ binary_url }} checksum=sha256:{{ binary_hash }} dest=/tmp/go-ipfs.tar.gz
  register: binary
- block:
    - name: extract go-ipfs archive
      unarchive: copy=no src=/tmp/go-ipfs.tar.gz dest=/tmp/
    - name: install go-ipfs
      copy: remote_src=True src=/tmp/go-ipfs/ipfs dest="{{ ipfs_binary }}" mode=755
      become: true
      notify: restart ipfs
    - name: remove temporary files
      file: state=absent path=/tmp/go-ipfs
  when: binary.changed
- block:
    - group: name=ipfs system=true state=present
    - user: name=ipfs comment="IPFS daemon" group=ipfs system=true state=present home="{{ ipfs_path }}" shell=/usr/sbin/nologin
    - file: path="{{ ipfs_path }}" owner=ipfs group=ipfs mode=750 state=directory
    - include: fuse_mount.yml
      when: ipfs_mount
    - name: initialize IPFS repository
      command: "{{ ipfs_binary }} init"
      args:
        creates: "{{ ipfs_path }}/version"
      environment:
        IPFS_PATH: "{{ ipfs_path }}"
      become: true
      become_user: ipfs
    - template: src=ipfs_config dest=/var/lib/ipfs/config
      notify: restart ipfs
    - template: src=ipfs.service dest=/etc/systemd/system/ipfs.service
      register: service
    # Note: new in 2.2
    # - systemd: daemon_reload=yes state=started name=ipfs enabled=yes
    - shell: systemctl daemon-reload
      when: service.changed
      notify: restart ipfs
    - name: enable memory cgroup in GRUB
      lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX_DEFAULT' line='GRUB_CMDLINE_LINUX_DEFAULT="quiet cgroup_enable=memory swapaccount=1 "' backup=yes
      notify: update grub
    - service: name=ipfs enabled=yes state=started
  become: true
